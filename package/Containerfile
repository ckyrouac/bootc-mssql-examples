FROM registry.redhat.io/rhel9/rhel-bootc

COPY usr usr

# Create user/group early to be used with demo data
RUN groupadd -g 1000 mssql && \
    useradd -u 1000 -g mssql mssql

# Add the demo data early so modifications of the big RUN block don't cause
# these layers to be rebuilt
ADD --chown=mssql:mssql AdventureWorks2022.bak /opt
ADD --chown=mssql:mssql restore.sql /opt
ADD --chmod=755 --chown=mssql:mssql mssql_demo.sh /opt

RUN <<EOF
set -euxo pipefail

# Add the mssql yum repos
curl -o /etc/yum.repos.d/mssql-server.repo https://packages.microsoft.com/config/rhel/9/mssql-server-2022.repo
curl https://packages.microsoft.com/config/rhel/9/prod.repo | sudo tee /etc/yum.repos.d/mssql-release.repo

# Accept the MSSQL EULA
export ACCEPT_EULA=Y

# Install mssql and dependencies
dnf install -y firewalld tuned tuned-profiles-mssql mssql-server mssql-server-selinux mssql-tools18 unixODBC-devel

# Initial setup with a temporary SA password.
# In a production deployment,
# this password should be set via a build variable or as a post boot step.
MSSQL_SA_PASSWORD='Pizzaisg00d!' /opt/mssql/bin/mssql-conf -n set-sa-password

# Set the mssql edition
MSSQL_PID='evaluation' /opt/mssql/bin/mssql-conf -n set-edition

# Create the mount points for each logical volume.
# Each of these will be backed by a RAID array
# and mounted as a logical volume during the anaconda install
# via the kickstart config
mkdir -p /var/mssql/data
mkdir -p /var/mssql/logs

# Use the RAID drives as the default location for mssql data and logs
# TODO: this doesn't work
# /opt/mssql/bin/mssql-conf set filelocation.defaultdatadir /var/mssql/data
# /opt/mssql/bin/mssql-conf set filelocation.defaultlogdir /var/mssql/logs
# /opt/mssql/bin/mssql-conf set filelocation.defaultbackupdir /var/mssql/data
# /opt/mssql/bin/mssql-conf set filelocation.defaultdumpdir /var/mssql/logs
# /opt/mssql/bin/mssql-conf set filelocation.errorlogfile /var/mssql/logs

# Enable the mssql service to start on boot
systemctl enable mssql-server.service

# Open the mssql port
firewall-offline-cmd --zone=public --add-port=1433/tcp

# Add mssql binary directory to root's $PATH
mkdir /var/roothome
echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bash_profile

#this is a recommended setting, but seems to break the example database restore script. Commenting it for now
#echo mssql - nofile 1048576 > /etc/security/limits.d/99-mssql-server.conf
echo mssql >> /etc/tuned/active_profile

#Enable FIPS
#echo 'kargs = ["fips=1"]' >> /usr/lib/bootc/kargs.d/fips.toml
#update-crypto-policies --no-reload --set FIPS

echo 'd /var/lib/selinux/targeted/active/modules/200/mssql 0700 - - -' > /etc/tmpfiles.d/mssql.conf

systemctl enable tuned
EOF

RUN bootc container lint
